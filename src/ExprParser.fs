// Implementation file for parser generated by fsyacc
module internal Tranq.ExprParser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 13 "ExprParser.fsy"

open Microsoft.FSharp.Text.Parsing
open Tranq.ExprAst
open Tranq.ExprAst.ParseHelper

# 12 "ExprParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAREN
  | RPAREN
  | DOT
  | AND_ALSO
  | OR_ELSE
  | EQUAL
  | NOT_EQUAL
  | LESS_THAN
  | GREATER_THAN
  | LESS_THAN_OR_EQUAL
  | GREATER_THAN_OR_EQUAL
  | ADD
  | SUB
  | MUL
  | DIV
  | MOD
  | COMMA
  | IN
  | NULL
  | NOT of (string)
  | TYPENAME of (string)
  | IDENT of (string)
  | STRING of (string)
  | DECIMAL of (string)
  | DOUBLE of (string)
  | SINGLE of (string)
  | UNATIVEINT of (string)
  | NATIVEINT of (string)
  | UINT64 of (string)
  | INT64 of (string)
  | UINT32 of (string)
  | INT32 of (string)
  | UINT16 of (string)
  | INT16 of (string)
  | SBYTE of (string)
  | BYTE of (string)
  | BOOLEAN of (bool)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_DOT
    | TOKEN_AND_ALSO
    | TOKEN_OR_ELSE
    | TOKEN_EQUAL
    | TOKEN_NOT_EQUAL
    | TOKEN_LESS_THAN
    | TOKEN_GREATER_THAN
    | TOKEN_LESS_THAN_OR_EQUAL
    | TOKEN_GREATER_THAN_OR_EQUAL
    | TOKEN_ADD
    | TOKEN_SUB
    | TOKEN_MUL
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_COMMA
    | TOKEN_IN
    | TOKEN_NULL
    | TOKEN_NOT
    | TOKEN_TYPENAME
    | TOKEN_IDENT
    | TOKEN_STRING
    | TOKEN_DECIMAL
    | TOKEN_DOUBLE
    | TOKEN_SINGLE
    | TOKEN_UNATIVEINT
    | TOKEN_NATIVEINT
    | TOKEN_UINT64
    | TOKEN_INT64
    | TOKEN_UINT32
    | TOKEN_INT32
    | TOKEN_UINT16
    | TOKEN_INT16
    | TOKEN_SBYTE
    | TOKEN_BYTE
    | TOKEN_BOOLEAN
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_Prog
    | NONTERM_Expression
    | NONTERM_Factor
    | NONTERM_Tuple

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAREN  -> 1 
  | RPAREN  -> 2 
  | DOT  -> 3 
  | AND_ALSO  -> 4 
  | OR_ELSE  -> 5 
  | EQUAL  -> 6 
  | NOT_EQUAL  -> 7 
  | LESS_THAN  -> 8 
  | GREATER_THAN  -> 9 
  | LESS_THAN_OR_EQUAL  -> 10 
  | GREATER_THAN_OR_EQUAL  -> 11 
  | ADD  -> 12 
  | SUB  -> 13 
  | MUL  -> 14 
  | DIV  -> 15 
  | MOD  -> 16 
  | COMMA  -> 17 
  | IN  -> 18 
  | NULL  -> 19 
  | NOT _ -> 20 
  | TYPENAME _ -> 21 
  | IDENT _ -> 22 
  | STRING _ -> 23 
  | DECIMAL _ -> 24 
  | DOUBLE _ -> 25 
  | SINGLE _ -> 26 
  | UNATIVEINT _ -> 27 
  | NATIVEINT _ -> 28 
  | UINT64 _ -> 29 
  | INT64 _ -> 30 
  | UINT32 _ -> 31 
  | INT32 _ -> 32 
  | UINT16 _ -> 33 
  | INT16 _ -> 34 
  | SBYTE _ -> 35 
  | BYTE _ -> 36 
  | BOOLEAN _ -> 37 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAREN 
  | 2 -> TOKEN_RPAREN 
  | 3 -> TOKEN_DOT 
  | 4 -> TOKEN_AND_ALSO 
  | 5 -> TOKEN_OR_ELSE 
  | 6 -> TOKEN_EQUAL 
  | 7 -> TOKEN_NOT_EQUAL 
  | 8 -> TOKEN_LESS_THAN 
  | 9 -> TOKEN_GREATER_THAN 
  | 10 -> TOKEN_LESS_THAN_OR_EQUAL 
  | 11 -> TOKEN_GREATER_THAN_OR_EQUAL 
  | 12 -> TOKEN_ADD 
  | 13 -> TOKEN_SUB 
  | 14 -> TOKEN_MUL 
  | 15 -> TOKEN_DIV 
  | 16 -> TOKEN_MOD 
  | 17 -> TOKEN_COMMA 
  | 18 -> TOKEN_IN 
  | 19 -> TOKEN_NULL 
  | 20 -> TOKEN_NOT 
  | 21 -> TOKEN_TYPENAME 
  | 22 -> TOKEN_IDENT 
  | 23 -> TOKEN_STRING 
  | 24 -> TOKEN_DECIMAL 
  | 25 -> TOKEN_DOUBLE 
  | 26 -> TOKEN_SINGLE 
  | 27 -> TOKEN_UNATIVEINT 
  | 28 -> TOKEN_NATIVEINT 
  | 29 -> TOKEN_UINT64 
  | 30 -> TOKEN_INT64 
  | 31 -> TOKEN_UINT32 
  | 32 -> TOKEN_INT32 
  | 33 -> TOKEN_UINT16 
  | 34 -> TOKEN_INT16 
  | 35 -> TOKEN_SBYTE 
  | 36 -> TOKEN_BYTE 
  | 37 -> TOKEN_BOOLEAN 
  | 40 -> TOKEN_end_of_input
  | 38 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_Prog 
    | 3 -> NONTERM_Expression 
    | 4 -> NONTERM_Expression 
    | 5 -> NONTERM_Expression 
    | 6 -> NONTERM_Expression 
    | 7 -> NONTERM_Expression 
    | 8 -> NONTERM_Expression 
    | 9 -> NONTERM_Expression 
    | 10 -> NONTERM_Expression 
    | 11 -> NONTERM_Expression 
    | 12 -> NONTERM_Expression 
    | 13 -> NONTERM_Expression 
    | 14 -> NONTERM_Expression 
    | 15 -> NONTERM_Expression 
    | 16 -> NONTERM_Expression 
    | 17 -> NONTERM_Expression 
    | 18 -> NONTERM_Expression 
    | 19 -> NONTERM_Expression 
    | 20 -> NONTERM_Expression 
    | 21 -> NONTERM_Factor 
    | 22 -> NONTERM_Factor 
    | 23 -> NONTERM_Factor 
    | 24 -> NONTERM_Factor 
    | 25 -> NONTERM_Factor 
    | 26 -> NONTERM_Factor 
    | 27 -> NONTERM_Factor 
    | 28 -> NONTERM_Factor 
    | 29 -> NONTERM_Factor 
    | 30 -> NONTERM_Factor 
    | 31 -> NONTERM_Factor 
    | 32 -> NONTERM_Factor 
    | 33 -> NONTERM_Factor 
    | 34 -> NONTERM_Factor 
    | 35 -> NONTERM_Factor 
    | 36 -> NONTERM_Factor 
    | 37 -> NONTERM_Factor 
    | 38 -> NONTERM_Factor 
    | 39 -> NONTERM_Factor 
    | 40 -> NONTERM_Tuple 
    | 41 -> NONTERM_Tuple 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 40 
let _fsyacc_tagOfErrorTerminal = 38

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | DOT  -> "DOT" 
  | AND_ALSO  -> "AND_ALSO" 
  | OR_ELSE  -> "OR_ELSE" 
  | EQUAL  -> "EQUAL" 
  | NOT_EQUAL  -> "NOT_EQUAL" 
  | LESS_THAN  -> "LESS_THAN" 
  | GREATER_THAN  -> "GREATER_THAN" 
  | LESS_THAN_OR_EQUAL  -> "LESS_THAN_OR_EQUAL" 
  | GREATER_THAN_OR_EQUAL  -> "GREATER_THAN_OR_EQUAL" 
  | ADD  -> "ADD" 
  | SUB  -> "SUB" 
  | MUL  -> "MUL" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | COMMA  -> "COMMA" 
  | IN  -> "IN" 
  | NULL  -> "NULL" 
  | NOT _ -> "NOT" 
  | TYPENAME _ -> "TYPENAME" 
  | IDENT _ -> "IDENT" 
  | STRING _ -> "STRING" 
  | DECIMAL _ -> "DECIMAL" 
  | DOUBLE _ -> "DOUBLE" 
  | SINGLE _ -> "SINGLE" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | INT64 _ -> "INT64" 
  | UINT32 _ -> "UINT32" 
  | INT32 _ -> "INT32" 
  | UINT16 _ -> "UINT16" 
  | INT16 _ -> "INT16" 
  | SBYTE _ -> "SBYTE" 
  | BYTE _ -> "BYTE" 
  | BOOLEAN _ -> "BOOLEAN" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | AND_ALSO  -> (null : System.Object) 
  | OR_ELSE  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | NOT_EQUAL  -> (null : System.Object) 
  | LESS_THAN  -> (null : System.Object) 
  | GREATER_THAN  -> (null : System.Object) 
  | LESS_THAN_OR_EQUAL  -> (null : System.Object) 
  | GREATER_THAN_OR_EQUAL  -> (null : System.Object) 
  | ADD  -> (null : System.Object) 
  | SUB  -> (null : System.Object) 
  | MUL  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | NOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TYPENAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOUBLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SINGLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SBYTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BOOLEAN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 17us; 65535us; 0us; 3us; 22us; 6us; 23us; 7us; 24us; 8us; 25us; 9us; 26us; 10us; 27us; 11us; 28us; 12us; 29us; 13us; 30us; 14us; 31us; 15us; 32us; 16us; 33us; 17us; 34us; 18us; 35us; 19us; 38us; 20us; 54us; 21us; 36us; 65535us; 0us; 5us; 3us; 36us; 6us; 36us; 7us; 36us; 8us; 36us; 9us; 36us; 10us; 36us; 11us; 36us; 12us; 36us; 13us; 36us; 14us; 36us; 15us; 36us; 16us; 36us; 17us; 36us; 18us; 36us; 19us; 36us; 20us; 36us; 21us; 36us; 22us; 5us; 23us; 5us; 24us; 5us; 25us; 5us; 26us; 5us; 27us; 5us; 28us; 5us; 29us; 5us; 30us; 5us; 31us; 5us; 32us; 5us; 33us; 5us; 34us; 5us; 35us; 5us; 38us; 5us; 54us; 5us; 64us; 57us; 65us; 58us; 17us; 65535us; 0us; 37us; 22us; 37us; 23us; 37us; 24us; 37us; 25us; 37us; 26us; 37us; 27us; 37us; 28us; 37us; 29us; 37us; 30us; 37us; 31us; 37us; 32us; 37us; 33us; 37us; 34us; 37us; 35us; 37us; 38us; 37us; 54us; 37us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 23us; 60us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 15us; 2us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 1us; 2us; 4us; 3us; 20us; 38us; 40us; 15us; 4us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 12us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 13us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 14us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 15us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 16us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 18us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 20us; 15us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 18us; 37us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 2us; 18us; 38us; 2us; 19us; 41us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 2us; 36us; 37us; 1us; 36us; 1us; 37us; 2us; 38us; 40us; 2us; 38us; 41us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 41us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 22us; 24us; 29us; 45us; 61us; 77us; 93us; 109us; 125us; 141us; 157us; 173us; 189us; 205us; 221us; 237us; 253us; 269us; 285us; 287us; 289us; 291us; 293us; 295us; 297us; 299us; 301us; 303us; 305us; 307us; 309us; 311us; 313us; 316us; 319us; 321us; 323us; 325us; 327us; 329us; 331us; 333us; 335us; 337us; 339us; 341us; 343us; 345us; 347us; 349us; 351us; 354us; 356us; 358us; 361us; 364us; 366us; 368us; 370us; 372us; 374us; 376us; |]
let _fsyacc_action_rows = 66
let _fsyacc_actionTableElements = [|18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 0us; 49152us; 0us; 16385us; 31us; 32768us; 0us; 4us; 1us; 54us; 4us; 33us; 5us; 34us; 6us; 27us; 7us; 28us; 8us; 29us; 9us; 30us; 10us; 31us; 11us; 32us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 0us; 16386us; 3us; 16387us; 3us; 59us; 17us; 64us; 18us; 38us; 20us; 16388us; 1us; 54us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 20us; 16389us; 1us; 54us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 17us; 16390us; 1us; 54us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 17us; 16391us; 1us; 54us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 19us; 16392us; 1us; 54us; 14us; 24us; 15us; 25us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 22us; 16393us; 1us; 54us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 22us; 16394us; 1us; 54us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 22us; 16395us; 1us; 54us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 22us; 16396us; 1us; 54us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 22us; 16397us; 1us; 54us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 22us; 16398us; 1us; 54us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 28us; 16399us; 1us; 54us; 6us; 27us; 7us; 28us; 8us; 29us; 9us; 30us; 10us; 31us; 11us; 32us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 29us; 16400us; 1us; 54us; 4us; 33us; 6us; 27us; 7us; 28us; 8us; 29us; 9us; 30us; 10us; 31us; 11us; 32us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 28us; 16401us; 1us; 54us; 6us; 27us; 7us; 28us; 8us; 29us; 9us; 30us; 10us; 31us; 11us; 32us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 30us; 16404us; 1us; 54us; 4us; 33us; 5us; 34us; 6us; 27us; 7us; 28us; 8us; 29us; 9us; 30us; 10us; 31us; 11us; 32us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 31us; 32768us; 1us; 54us; 2us; 56us; 4us; 33us; 5us; 34us; 6us; 27us; 7us; 28us; 8us; 29us; 9us; 30us; 10us; 31us; 11us; 32us; 12us; 22us; 13us; 23us; 14us; 24us; 15us; 25us; 16us; 26us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 1us; 16402us; 3us; 59us; 1us; 16403us; 17us; 65us; 18us; 32768us; 1us; 54us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 0us; 16412us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 19us; 32768us; 1us; 54us; 2us; 55us; 19us; 39us; 20us; 35us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 0us; 16420us; 0us; 16421us; 1us; 16424us; 3us; 59us; 1us; 16425us; 3us; 59us; 1us; 32768us; 22us; 60us; 0us; 16422us; 1us; 32768us; 3us; 62us; 1us; 32768us; 22us; 63us; 0us; 16423us; 17us; 32768us; 1us; 54us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; 17us; 32768us; 1us; 54us; 19us; 39us; 21us; 61us; 22us; 53us; 23us; 52us; 24us; 51us; 25us; 50us; 26us; 49us; 29us; 48us; 30us; 47us; 31us; 46us; 32us; 45us; 33us; 44us; 34us; 43us; 35us; 42us; 36us; 41us; 37us; 40us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 19us; 20us; 21us; 53us; 54us; 58us; 79us; 100us; 118us; 136us; 156us; 179us; 202us; 225us; 248us; 271us; 294us; 323us; 353us; 382us; 413us; 445us; 464us; 483us; 502us; 521us; 540us; 559us; 578us; 597us; 616us; 635us; 654us; 673us; 692us; 711us; 713us; 715us; 734us; 735us; 736us; 737us; 738us; 739us; 740us; 741us; 742us; 743us; 744us; 745us; 746us; 747us; 748us; 749us; 769us; 770us; 771us; 773us; 775us; 777us; 778us; 780us; 782us; 783us; 801us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; 5us; 5us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 16386us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16405us; 16406us; 16407us; 16408us; 16409us; 16410us; 16411us; 16412us; 16413us; 16414us; 16415us; 16416us; 16417us; 16418us; 16419us; 65535us; 16420us; 16421us; 65535us; 65535us; 65535us; 16422us; 65535us; 65535us; 16423us; 65535us; 65535us; |]
let _fsyacc_reductions ()  =    [| 
# 335 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  ExprAst.Expr )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 344 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Prog)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "ExprParser.fsy"
                                   _1 
                   )
# 60 "ExprParser.fsy"
                 :  ExprAst.Expr ));
# 355 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "ExprParser.fsy"
                                                                          _1 
                   )
# 63 "ExprParser.fsy"
                 : 'Prog));
# 366 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "ExprParser.fsy"
                                                                          newFactor parseState _1 
                   )
# 66 "ExprParser.fsy"
                 : 'Expression));
# 377 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "ExprParser.fsy"
                                                                          newAdd parseState _1 _3 
                   )
# 67 "ExprParser.fsy"
                 : 'Expression));
# 389 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "ExprParser.fsy"
                                                                          newSub parseState _1 _3 
                   )
# 68 "ExprParser.fsy"
                 : 'Expression));
# 401 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "ExprParser.fsy"
                                                                          newMul parseState _1 _3 
                   )
# 69 "ExprParser.fsy"
                 : 'Expression));
# 413 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "ExprParser.fsy"
                                                                          newDiv parseState _1 _3 
                   )
# 70 "ExprParser.fsy"
                 : 'Expression));
# 425 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "ExprParser.fsy"
                                                                          newMod parseState _1 _3 
                   )
# 71 "ExprParser.fsy"
                 : 'Expression));
# 437 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "ExprParser.fsy"
                                                                          newEqual parseState _1 _3 
                   )
# 72 "ExprParser.fsy"
                 : 'Expression));
# 449 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "ExprParser.fsy"
                                                                          newNotEqual parseState _1 _3 
                   )
# 73 "ExprParser.fsy"
                 : 'Expression));
# 461 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "ExprParser.fsy"
                                                                          newLessThan parseState _1 _3 
                   )
# 74 "ExprParser.fsy"
                 : 'Expression));
# 473 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "ExprParser.fsy"
                                                                          newGreaterThan parseState _1 _3 
                   )
# 75 "ExprParser.fsy"
                 : 'Expression));
# 485 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "ExprParser.fsy"
                                                                          newLessThanOrEqual parseState _1 _3 
                   )
# 76 "ExprParser.fsy"
                 : 'Expression));
# 497 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "ExprParser.fsy"
                                                                          newGreaterThanOrEqual parseState _1 _3 
                   )
# 77 "ExprParser.fsy"
                 : 'Expression));
# 509 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "ExprParser.fsy"
                                                                          newAndAlso parseState _1 _3 
                   )
# 78 "ExprParser.fsy"
                 : 'Expression));
# 521 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "ExprParser.fsy"
                                                                          newOrElse parseState _1 _3 
                   )
# 79 "ExprParser.fsy"
                 : 'Expression));
# 533 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "ExprParser.fsy"
                                                                          newNot parseState _1 _2 
                   )
# 80 "ExprParser.fsy"
                 : 'Expression));
# 545 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "ExprParser.fsy"
                                                                          newApplication parseState _1 _2 
                   )
# 81 "ExprParser.fsy"
                 : 'Expression));
# 557 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Tuple)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "ExprParser.fsy"
                                                                          newTuple parseState _1 
                   )
# 82 "ExprParser.fsy"
                 : 'Expression));
# 568 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "ExprParser.fsy"
                                                                          newIn parseState _1 _3 
                   )
# 83 "ExprParser.fsy"
                 : 'Expression));
# 580 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "ExprParser.fsy"
                                                                          newNull parseState 
                   )
# 86 "ExprParser.fsy"
                 : 'Factor));
# 590 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "ExprParser.fsy"
                                                                          newBoolean parseState _1 
                   )
# 87 "ExprParser.fsy"
                 : 'Factor));
# 601 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "ExprParser.fsy"
                                                                          newByte parseState _1 
                   )
# 88 "ExprParser.fsy"
                 : 'Factor));
# 612 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "ExprParser.fsy"
                                                                          newSByte parseState _1 
                   )
# 89 "ExprParser.fsy"
                 : 'Factor));
# 623 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "ExprParser.fsy"
                                                                          newInt16 parseState _1 
                   )
# 90 "ExprParser.fsy"
                 : 'Factor));
# 634 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "ExprParser.fsy"
                                                                          newUInt16 parseState _1 
                   )
# 91 "ExprParser.fsy"
                 : 'Factor));
# 645 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "ExprParser.fsy"
                                                                          newInt32 parseState _1 
                   )
# 92 "ExprParser.fsy"
                 : 'Factor));
# 656 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "ExprParser.fsy"
                                                                          newUInt32 parseState _1  
                   )
# 93 "ExprParser.fsy"
                 : 'Factor));
# 667 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "ExprParser.fsy"
                                                                          newInt64 parseState _1  
                   )
# 94 "ExprParser.fsy"
                 : 'Factor));
# 678 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "ExprParser.fsy"
                                                                          newUInt64 parseState _1  
                   )
# 95 "ExprParser.fsy"
                 : 'Factor));
# 689 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "ExprParser.fsy"
                                                                          newSingle parseState _1  
                   )
# 96 "ExprParser.fsy"
                 : 'Factor));
# 700 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "ExprParser.fsy"
                                                                          newDouble parseState _1  
                   )
# 97 "ExprParser.fsy"
                 : 'Factor));
# 711 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "ExprParser.fsy"
                                                                          newDecimal parseState _1  
                   )
# 98 "ExprParser.fsy"
                 : 'Factor));
# 722 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "ExprParser.fsy"
                                                                          newString parseState _1 
                   )
# 99 "ExprParser.fsy"
                 : 'Factor));
# 733 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "ExprParser.fsy"
                                                                          newVar parseState _1 
                   )
# 100 "ExprParser.fsy"
                 : 'Factor));
# 744 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "ExprParser.fsy"
                                                                          newUnit parseState 
                   )
# 101 "ExprParser.fsy"
                 : 'Factor));
# 754 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "ExprParser.fsy"
                                                                          newParens parseState _2 
                   )
# 102 "ExprParser.fsy"
                 : 'Factor));
# 765 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "ExprParser.fsy"
                                                                          newProperty parseState _1 _3 
                   )
# 103 "ExprParser.fsy"
                 : 'Factor));
# 777 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "ExprParser.fsy"
                                                                          newStaticProperty parseState _1 _3 
                   )
# 104 "ExprParser.fsy"
                 : 'Factor));
# 789 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "ExprParser.fsy"
                                                                          [_3; _1] 
                   )
# 107 "ExprParser.fsy"
                 : 'Tuple));
# 801 "ExprParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Tuple)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "ExprParser.fsy"
                                                                          _3 :: _1 
                   )
# 108 "ExprParser.fsy"
                 : 'Tuple));
|]
# 814 "ExprParser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 41;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  ExprAst.Expr  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
